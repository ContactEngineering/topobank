name: Test code functionality

on:
  push:
    branches:
      - '**'
    tags:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  tests:
    runs-on: ubuntu-24.04
    timeout-minutes: 30

    strategy:
      matrix:
        database:
          # - ['hello-world', 'sqlite:///topobank.sqlite3']
          - ['postgres:17', 'postgres://postgres:secret@localhost/topobank-test']
        storage:
          - ['hello-world', 'inmemorystorage.InMemoryStorage', 'POST']
          - ['minio', 'storages.backends.s3boto3.S3Boto3Storage', 'POST']
          - ['minio', 'storages.backends.s3boto3.S3Boto3Storage', 'PUT']
        python-version: ['3.10', '3.13']

    services:
      postgres:
        image: ${{ matrix.database[0] }}
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: secret
          POSTGRES_DB: topobank-test
        ports:
          - 5432:5432

    env:
      DATABASE_URL: ${{ matrix.database[1] }}
      STORAGE_BACKEND: ${{ matrix.storage[1] }}
      TOPOBANK_UPLOAD_METHOD: ${{ matrix.storage[2] }}
      AWS_ACCESS_KEY_ID: admin
      AWS_SECRET_ACCESS_KEY: secret12
      AWS_STORAGE_BUCKET_NAME: topobank-test
      AWS_S3_ENDPOINT_URL: http://localhost:9000

    steps:
    - name: Start Minio
      if: endsWith(matrix.storage[1], 'S3Boto3Storage')
      run: |
        docker run -d \
          --name minio \
          -p 9000:9000 \
          -p 9001:9001 \
          -e MINIO_ROOT_USER=$AWS_ACCESS_KEY_ID \
          -e MINIO_ROOT_PASSWORD=$AWS_SECRET_ACCESS_KEY \
          minio/minio:latest \
          server /data --console-address ":9001"

    - name: Create bucket
      if: endsWith(matrix.storage[1], 'S3Boto3Storage')
      run: |
        curl https://dl.min.io/client/mc/release/linux-amd64/mc --create-dirs -o $HOME/minio-binaries/mc
        chmod +x $HOME/minio-binaries/mc
        export PATH=$PATH:$HOME/minio-binaries/

        # Wait for Minio to be ready
        echo "Waiting for Minio to be ready..."
        for i in {1..30}; do
          if mc alias set minio $AWS_S3_ENDPOINT_URL $AWS_ACCESS_KEY_ID $AWS_SECRET_ACCESS_KEY 2>/dev/null; then
            echo "Minio is ready!"
            break
          fi
          echo "Attempt $i: Minio not ready yet, waiting..."
          sleep 2
        done

        # Verify the alias was set successfully
        mc alias list minio
        mc mb --ignore-existing minio/$AWS_STORAGE_BUCKET_NAME

    - name: Checkout source code
      uses: actions/checkout@v5
      with:
        fetch-depth: 0
        submodules: recursive

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v6
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install
      run: |
        pip install .[dev]
        python manage.py collectstatic

    - name: Test
      run: pytest -v
