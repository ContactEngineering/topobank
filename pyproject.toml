[build-system]
requires = ["flit_core>=3.2", "DiscoverVersion"]
build-backend = "flit_core.buildapi"

[project]
name = 'topobank'
description = 'A surface metrology cloud database'
requires-python = '>=3.9.0'
dynamic = ['version']
readme = 'README.rst'
license = { file = 'LICENSE' }
authors = [
    { name = "Michael RÃ¶ttger", email = "info@michael-roettger.de" },
    { name = "Lars Pastewka", email = "lars.pastewka@imtek.uni-freiburg.de" },
    { name = "Ioannis Nezis", email = "ioannis@nezis.de" },
]
classifiers = [
    'Development Status :: 5 - Production/Stable',
    'Environment :: Web Environment',
    'Framework :: Django',
    'Framework :: Django :: 3.2',
    'Framework :: Celery',
    'Intended Audience :: Developers',
    'License :: OSI Approved :: MIT License',
    'Operating System :: POSIX',
    'Programming Language :: Python',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3 :: Only',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Programming Language :: Python :: 3.12',
    'Topic :: Internet :: WWW/HTTP',
    'Topic :: Internet :: WWW/HTTP :: Dynamic Content',
]
dependencies = [
    'DiscoverVersion',                   # Version information from git
    'backports.entry-points-selectable', # Plugin handling

    'argon2-cffi',     # https://github.com/hynek/argon2_cffi
    'whitenoise>=5.3', # https://github.com/evansd/whitenoise
    'psycopg[binary]', # https://github.com/psycopg/psycopg3

    # Django
    'django==4.2.18',         #  does this work with pyup?  # https://www.djangoproject.com/
    'django-environ',         # https://github.com/joke2k/django-environ
    'django-allauth>=0.56.0', # https://github.com/pennersr/django-allauth
    'fido2',                  # required by django-allauth
    'django-crispy-forms',    # https://github.com/django-crispy-forms/django-crispy-forms
    'crispy-bootstrap5',      # https://stackoverflow.com/questions/75495403/django-returns-templatedoesnotexist-when-using-crispy-forms

    # Redis for caching
    'django-redis',

    # Django REST Framework
    'djangorestframework',
    # https://github.com/encode/django-rest-framework

    # OpenApi Support
    'drf-spectacular>=0.27.2',

    # tagging support
    'django-tagulous>=1.3.0',

    # statistics
    # django-statsy  # cannot be used currently because of fixed version in requirements
    'django-trackstats',

    #
    # Storage
    #
    'boto3',           # S3
    'django-storages',

    # Endpoint status
    'django-watchman',

    # Profiling
    'django-request-profiler',

    # Celery
    # django-kombu # is this still needed? See https://pypi.org/project/django-kombu/
    'celery[redis]>=5.2.3',
    # with memcached we've had several problems within a Docker swarm stack
    # pylibmc seems to cause memcache problems: see GH 737
    # librabbitmq>=2.0
    # problems while compiling librabbitmq

    # Flower (monitoring for celery) is currently not used because of dependency and security problems
    # flower==1.0.0

    # tornado>=4.2.0, <6.0.0

    # Surface topography I/O and analysis
    'SurfaceTopography>=1.17.1',

    # Validation
    'pydantic',

    # pandas is currently needed for downloading xlsx files from analyses
    'pandas',

    # xarray is used to write analysis data to netcdf files
    'xarray',

    # notifications
    # (static/js/notify.js appears to be missing from 1.8.0 and above)
    'django-notifications-hq==1.8.3',

    # openpyxl
    'openpyxl',

    # requests from server
    'requests',

    # Unit conversion
    'pint>=0.24.4',  # https://github.com/hgrecco/pint/issues/2074

    # markdown conversion for terms & conditions and for docstrings in readers
    'markdown2>=2.4.0',
    # Version 2.3.8 has a security issue (CVE-2020-11888)
    # Version 2.3.9 has a security issue (CVE-2021-26813)

    'urllib3>=1.26.5',
    # Upgrade because of CVE-2021-33503

    # for syntax highlighting for docstrings of readers
    'pygments>=2.7.4',

    # some other constraints due to security concerns
    'lxml>=4.9.1',
    'jinja2>=2.11.3',
    # because of CVE-2020-28493

    'cryptography>=39.0.1',
    # https://www.openssl.org/news/secadv/20221213.txt

    'Pillow>=9.0.1',
    # because of several CVEs

    'PyYAML>=5.4',
    # CVE-2020-14343

    'sqlparse>=0.4.2',
    # CVE-2021-32839

    'pyjwt>=2.4.0',
    #  https://github.com/ContactEngineering/TopoBank/security/dependabot/61

    'greenlet',
    'gevent',
    'gunicorn[gevent]>=20.1.0', # https://github.com/benoitc/gunicorn
    # gunicorn[eventlet]>=20.0.4
    #
    # Got problems with eventlet, see issue #415

    # because of problem with AttributeError for 'X509_V_FLAG_CB_ISSUER_CHECK'
    'pyopenssl>=23.0.0',

    # deprecated, only needed for historic migrations
    'django-guardian',
]

[project.optional-dependencies]
dev = [
    'Werkzeug',
    # https://github.com/pallets/werkzeug
    'ipdb',
    # https://github.com/gotcha/ipdb
    # Not version 2.9 because of this
    # https://stackoverflow.com/questions/68024060/assertionerror-database-connection-isnt-set-to-utc

    # Documentation
    # ------------------------------------------------------------------------------
    'Sphinx<8.1.4',
    # https://github.com/sphinx-doc/sphinx
    'sphinx_rtd_theme',

    # Testing
    # ------------------------------------------------------------------------------
    'pytest',
    'pytest-sugar',
    'pytest-env',

    # Because of CVE-2020-29651
    'py>=1.10.0',

    # Code quality
    # ------------------------------------------------------------------------------
    'flake8',
    'coverage',

    # Django
    # ------------------------------------------------------------------------------
    'factory-boy',
    # https://github.com/FactoryBoy/factory_boy
    'django-test-plus',
    # https://github.com/revsys/django-test-plus

    'django-celery-results',
    # https://django-celery-results.readthedocs.io/en/latest/

    'django-debug-toolbar',
    # https://github.com/jazzband/django-debug-toolbar
    # Debug toolbar must be compatible with Django 3.2
    'django-extensions>=3.2.0',
    # https://github.com/django-extensions/django-extensions
    'django-coverage-plugin',
    # https://github.com/nedbat/django_coverage_plugin
    'pytest-django>=4.4.0',
    # https://github.com/pytest-dev/pytest-django
    'pytest-mock',
    'pytest-cov',

    # Dependency Handling
    # ------------------------------------------------------------------------------
    'pip-tools>=6.8.0',

    # Docker
    # ------------------------------------------------------------------------------
    # docker-compose
    # introduces dependency on a too old pyyaml version

    # Debugging
    # ------------------------------------------------------------------------------

    # for testing functions depending on date functions
    'freezegun',

    # for using storage items in test
    'dj-inmemorystorage',

    # JAX
    'jax',
]

[project.urls]
homepage = 'https://contact.engineering'
repository = 'https://github.com/ContactEngineering/topobank'

[tool.black]
line-length = 88
target-version = ["py39", "py310", "py311", "py312"]

[tool.isort]
profile = "black"

[tool.pytest.ini_options]
env = ["DJANGO_SETTINGS_MODULE=topobank.settings.test"]
